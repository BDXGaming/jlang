//Checks if the given class object has the jlang __cls__ method indicating the class is a jlang class
func is_jlang(obj){

    if getattr(obj, "__cls__", None) is not None{
        return True
    }
    else{
        return False
    }

}

func show(data){

    // Checks if the data passed is a string derived from the jlang string
    if not isinstance(data, String){

        // This allows for undefined python strings to be used in jlang
        if not isinstance(data, python.str){

            // This checks if the object is a jlang class or not, uses python __str__ meth if not from jlang
            if getattr(data, "__string__", None) is None{
                data = data.__str__()
            }

            // If the data is a jlang class use the jlang string function
            else{
                try{
                    data = data.__string__()
                }
                except TypeError{
                    data = str(data)
                }
            }
        }
    }

    // This just invokes the python print function with the data passed
     python.print(data)
}

func type(obj){
    if is_jlang(obj){
        return obj.__cls__()
    }
    else{
        return type(obj)
    }

}